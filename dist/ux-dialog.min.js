/*
 MIT License. 
 ux-dialog v0.1.14
 author: uiwwsw
 homepage:https://github.com/uiwwsw/ux-dialog#readme
 */ "use strict";function _typeof(e){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}function _defineProperties(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function _createClass(e,n,t){return n&&_defineProperties(e.prototype,n),t&&_defineProperties(e,t),e}var defaultText={confirm:"확인",cancel:"취소"},contentsType={confirm:"boolean",cancel:"boolean",close:"boolean",dimClose:"boolean",title:"string",content:"string",callback:"function",text:"string",selfClose:"number",closeKey:"number",cancelKey:"number",confirmKey:"number",opend:"function",closed:"function"},UxDialog=function(){function c(e){_classCallCheck(this,c),c.keyUpEvents||(c.keyUpEvents=[]),this.getDefaultContents(e||{})}return _createClass(c,[{key:"checkType",value:function(e){var c=this;Object.entries(e).map(function(e){var n=e[0],t=e[1];if("object"===_typeof(t))c.checkType(t);else{var o=contentsType[n];if(_typeof(t)!==o)throw"".concat(t,"는 ").concat(o,"이 아닙니다.")}})}},{key:"makeNode",value:function(e){var n="",t="";e.confirm&&(n='<button name="confirm" type="button">'.concat(e.confirm.text||defaultText.confirm,"</button>")),e.cancel&&(t='<button name="cancel" type="button">'.concat(e.cancel.text||defaultText.cancel,"</button>"));var o=' \n          <div class="ux-dialog">\n            <div class="ux-dialog--content">\n              <button type="button" class="ux-dialog--close" '.concat(!1===e.close&&'style="display: none;"','>this dialog close</button>\n              <div class="ux-dialog--header">').concat(e.title,'</div>\n              <div class="ux-dialog--container">').concat(e.content,'</div>\n              <div class="ux-dialog--footer">').concat(n).concat(t,'</div>\n              <i class="ux-dialog--loading"></i>\n            </div>\n            <i class="ux-dialog--dim"></i>\n          </div>\n        ');return c.htmlToElement(o)}},{key:"append",value:function(e){var n=document.body;this.element=this.makeNode(e),n.appendChild(this.element)}},{key:"getDefaultContents",value:function(e){var n=this;this.checkType(e),this.element=null,this.contents={},Object.entries(e).map(function(e){n.contents[e[0]]=e[1]})}},{key:"bindEvent",value:function(n){var t=this;window.onkeyup&&c.keyUpEvents.push(window.onkeyup),window.onkeyup=function(e){if(n.closeKey!==e.keyCode)return n.cancelKey===e.keyCode?(n.cancel.callback&&n.cancel.callback(),void t.close()):void(n.confirmKey!==e.keyCode||n.confirm.callback&&n.confirm.callback());t.close()},n.dimClose&&(this.element.querySelector(".ux-dialog--dim").onclick=function(){t.close()}),this.element.querySelector(".ux-dialog--close").onclick=function(){t.close()},this.element.querySelector(".ux-dialog--footer").onclick=function(e){switch(e.target.name){case"confirm":n.confirm.callback&&n.confirm.callback();break;case"cancel":t.close(),n.cancel.callback&&n.cancel.callback()}}}},{key:"open",value:function(e){var o=this;if(null===this.element){var c=Object.assign({},this.contents);if(e&&(this.checkType(e),Object.entries(e).map(function(e){var n=e[0],t=e[1];o.contents[n]!==t&&(c[n]=t)})),this.append(c),this.bindEvent(c),c.opend){this.element.querySelector(".ux-dialog--dim").addEventListener("animationend",function e(){o.element.querySelector(".ux-dialog--dim").removeEventListener("animationend",e),c.opend()})}c.selfClose&&(clearTimeout(this.sto),this.element.querySelector(".ux-dialog--loading").style.animationDuration=c.selfClose/1e3+"s",this.sto=setTimeout(function(){o.close()},c.selfClose))}}},{key:"close",value:function(e){var n=this,t=this.element;if(t){var o=c.keyUpEvents.length;window.onkeyup=o?c.keyUpEvents.pop():null,t.classList.add("close"),t.querySelector(".ux-dialog--dim").addEventListener("animationend",function(){n.contents.closed&&n.contents.closed(),e&&e(),t.remove()}),this.element=null}}}],[{key:"htmlToElement",value:function(e){var n=document.createElement("template");return e=e.trim(),n.innerHTML=e,n.content.firstChild}}]),c}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
